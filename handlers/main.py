from aiogram.dispatcher.filters import CommandStart, CommandHelp
from aiogram.types import Message, CallbackQuery

from loader import dp, db
from keyboards import inline
from keyboards.inline.habits import habits_data
from keyboards.inline.actual_habits import actual_habits_data


@dp.message_handler(CommandStart())
async def cmd_start(message: Message):
    text = "–¢–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å–µ–º–µ–π–Ω—ã–π –±–æ—Ç üòä\n–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å!"
    await message.answer(text, reply_markup=inline.main.get_menu())


@dp.message_handler(CommandHelp())
async def cmd_help(message: Message):
    text = "–¢—É—Ç –±—É–¥–µ—Ç —Ä–∞—Å–ø–æ–ª–∞–≥–∞—Ç—å—Å—è —Å–ø—Ä–∞–≤–∫–∞"
    await message.answer(text)


@dp.callback_query_handler(habits_data.filter(action="back_habits_menu"))
@dp.callback_query_handler(inline.main.main_data.filter(action="planing"))
async def inline_main_menu_planing(query: CallbackQuery):
    list_habits = db.habits_get(text=False)
    kb = inline.habits.get_habits(list_habits)
    await query.message.edit_text(f"–í–æ—Ç –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–≤—ã—á–µ–∫. –í—Å–µ–≥–æ {len(list_habits)} –∑–∞–ø–∏—Å–µ–π", reply_markup=kb)
    await query.answer()


@dp.callback_query_handler(actual_habits_data.filter(action="back_actual_habits_menu"))
@dp.callback_query_handler(inline.main.main_data.filter(action="actual"))
async def inline_main_menu_actual(query: CallbackQuery):
    list_actual_habits = db.actual_habits_get()
    kb = inline.actual_habits.get_actual_habits(list_actual_habits)
    await query.message.edit_text("–í–æ—Ç —Å–ø–∏—Å–æ–∫ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –ø—Ä–∏–≤—ã—á–µ–∫", reply_markup=kb)
    await query.answer()
